/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package MonopolyBoard;

import java.awt.Color;
import javax.swing.Icon;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author tonychiu
 */
public class MonopolyBoard1 extends javax.swing.JFrame {

    public static final String GREEN_BUILDING = "/Images/greenHouse.png";
    
    /**
     * Creates new form MonopolyBoard
     */
    public MonopolyBoard1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PlayerPanelMain = new javax.swing.JPanel();
        selectedPlayerPanel = new javax.swing.JPanel();
        selectedPlayerInfo = new javax.swing.JPanel();
        selectedPlayerIcon = new javax.swing.JLabel();
        selectedPlayerName = new javax.swing.JLabel();
        selectedPlayerCash = new javax.swing.JLabel();
        selectedPlayerPropertyPanel = new javax.swing.JPanel();
        selectedOwnedPropertyLabelPanel = new javax.swing.JPanel();
        ownerPropertyLabel = new javax.swing.JLabel();
        ownedPropertyCardPanel = new javax.swing.JLayeredPane();
        brown1card = new javax.swing.JPanel();
        teal1card = new javax.swing.JPanel();
        pink1card = new javax.swing.JPanel();
        orange1card = new javax.swing.JPanel();
        red1card = new javax.swing.JPanel();
        yellow1card = new javax.swing.JPanel();
        green1card = new javax.swing.JPanel();
        bluecard2 = new javax.swing.JPanel();
        rail4card = new javax.swing.JLabel();
        rail1card = new javax.swing.JLabel();
        rail2card = new javax.swing.JLabel();
        rail3card = new javax.swing.JLabel();
        electriccard = new javax.swing.JLabel();
        browncard2 = new javax.swing.JPanel();
        tealcard2 = new javax.swing.JPanel();
        tealcard3 = new javax.swing.JPanel();
        pink2card = new javax.swing.JPanel();
        pink3card = new javax.swing.JPanel();
        orangecard2 = new javax.swing.JPanel();
        orangecard3 = new javax.swing.JPanel();
        redcard2 = new javax.swing.JPanel();
        redcard3 = new javax.swing.JPanel();
        yellowcard2 = new javax.swing.JPanel();
        yellowcard3 = new javax.swing.JPanel();
        greencard2 = new javax.swing.JPanel();
        greencard3 = new javax.swing.JPanel();
        blue1card1 = new javax.swing.JPanel();
        selectedBoardPiecePanel = new javax.swing.JPanel();
        selectedBoardPieceIconPanel = new javax.swing.JPanel();
        selectedBoardPieceIcon = new javax.swing.JLabel();
        monoboardBaseLayer = new javax.swing.JLayeredPane();
        brown1 = new javax.swing.JLabel();
        corner_jail = new javax.swing.JLabel();
        teal3 = new javax.swing.JLabel();
        teal2 = new javax.swing.JLabel();
        chance1 = new javax.swing.JLabel();
        teal1 = new javax.swing.JLabel();
        rail1 = new javax.swing.JLabel();
        incomeTax = new javax.swing.JLabel();
        brown2 = new javax.swing.JLabel();
        chest1 = new javax.swing.JLabel();
        corner_go = new javax.swing.JLabel();
        pink1 = new javax.swing.JLabel();
        pink2 = new javax.swing.JLabel();
        electric = new javax.swing.JLabel();
        pink3 = new javax.swing.JLabel();
        rail2 = new javax.swing.JLabel();
        orange1 = new javax.swing.JLabel();
        chest2 = new javax.swing.JLabel();
        orange2 = new javax.swing.JLabel();
        orange3 = new javax.swing.JLabel();
        red1 = new javax.swing.JLabel();
        chance2 = new javax.swing.JLabel();
        red2 = new javax.swing.JLabel();
        red3 = new javax.swing.JLabel();
        rail3 = new javax.swing.JLabel();
        yellow1 = new javax.swing.JLabel();
        yellow2 = new javax.swing.JLabel();
        water = new javax.swing.JLabel();
        yellow3 = new javax.swing.JLabel();
        jail = new javax.swing.JLabel();
        green1 = new javax.swing.JLabel();
        green2 = new javax.swing.JLabel();
        chest3 = new javax.swing.JLabel();
        rail4 = new javax.swing.JLabel();
        chance3 = new javax.swing.JLabel();
        blue1 = new javax.swing.JLabel();
        luxaryTax = new javax.swing.JLabel();
        green3 = new javax.swing.JLabel();
        blue2 = new javax.swing.JLabel();
        freeparking = new javax.swing.JLabel();
        dog = new javax.swing.JLabel();
        brown1Lot = new javax.swing.JPanel();
        brown2Lot = new javax.swing.JPanel();
        diceRollPanelBase = new javax.swing.JPanel();
        diceButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PlayerPanelMain.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        selectedPlayerPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        selectedPlayerInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        selectedPlayerIcon.setText("jLabel1");

        selectedPlayerName.setText("James");

        selectedPlayerCash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cash.png"))); // NOI18N
        selectedPlayerCash.setText("jLabel1");

        javax.swing.GroupLayout selectedPlayerInfoLayout = new javax.swing.GroupLayout(selectedPlayerInfo);
        selectedPlayerInfo.setLayout(selectedPlayerInfoLayout);
        selectedPlayerInfoLayout.setHorizontalGroup(
            selectedPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedPlayerInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectedPlayerIcon)
                .addGap(18, 18, 18)
                .addComponent(selectedPlayerName)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectedPlayerInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectedPlayerCash)
                .addContainerGap())
        );
        selectedPlayerInfoLayout.setVerticalGroup(
            selectedPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedPlayerInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectedPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedPlayerIcon)
                    .addComponent(selectedPlayerName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectedPlayerCash)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        selectedPlayerPropertyPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        selectedOwnedPropertyLabelPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        ownerPropertyLabel.setText("PROPERTIES OWNED");

        javax.swing.GroupLayout selectedOwnedPropertyLabelPanelLayout = new javax.swing.GroupLayout(selectedOwnedPropertyLabelPanel);
        selectedOwnedPropertyLabelPanel.setLayout(selectedOwnedPropertyLabelPanelLayout);
        selectedOwnedPropertyLabelPanelLayout.setHorizontalGroup(
            selectedOwnedPropertyLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedOwnedPropertyLabelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ownerPropertyLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        selectedOwnedPropertyLabelPanelLayout.setVerticalGroup(
            selectedOwnedPropertyLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectedOwnedPropertyLabelPanelLayout.createSequentialGroup()
                .addComponent(ownerPropertyLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        brown1card.setBackground(new java.awt.Color(255, 255, 255));
        brown1card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(120, 0, 0)));

        javax.swing.GroupLayout brown1cardLayout = new javax.swing.GroupLayout(brown1card);
        brown1card.setLayout(brown1cardLayout);
        brown1cardLayout.setHorizontalGroup(
            brown1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        brown1cardLayout.setVerticalGroup(
            brown1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        brown1card.setBounds(10, 10, 20, 30);
        ownedPropertyCardPanel.add(brown1card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        teal1card.setBackground(new java.awt.Color(255, 255, 255));
        teal1card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(140, 215, 227)));

        javax.swing.GroupLayout teal1cardLayout = new javax.swing.GroupLayout(teal1card);
        teal1card.setLayout(teal1cardLayout);
        teal1cardLayout.setHorizontalGroup(
            teal1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        teal1cardLayout.setVerticalGroup(
            teal1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        teal1card.setBounds(10, 50, 20, 30);
        ownedPropertyCardPanel.add(teal1card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        pink1card.setBackground(new java.awt.Color(255, 255, 255));
        pink1card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(227, 117, 190)));

        javax.swing.GroupLayout pink1cardLayout = new javax.swing.GroupLayout(pink1card);
        pink1card.setLayout(pink1cardLayout);
        pink1cardLayout.setHorizontalGroup(
            pink1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        pink1cardLayout.setVerticalGroup(
            pink1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        pink1card.setBounds(10, 90, 20, 30);
        ownedPropertyCardPanel.add(pink1card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        orange1card.setBackground(new java.awt.Color(255, 255, 255));
        orange1card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 94, 5)));

        javax.swing.GroupLayout orange1cardLayout = new javax.swing.GroupLayout(orange1card);
        orange1card.setLayout(orange1cardLayout);
        orange1cardLayout.setHorizontalGroup(
            orange1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        orange1cardLayout.setVerticalGroup(
            orange1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        orange1card.setBounds(10, 130, 20, 30);
        ownedPropertyCardPanel.add(orange1card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        red1card.setBackground(new java.awt.Color(255, 255, 255));
        red1card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(244, 0, 0)));

        javax.swing.GroupLayout red1cardLayout = new javax.swing.GroupLayout(red1card);
        red1card.setLayout(red1cardLayout);
        red1cardLayout.setHorizontalGroup(
            red1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        red1cardLayout.setVerticalGroup(
            red1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        red1card.setBounds(110, 10, 20, 30);
        ownedPropertyCardPanel.add(red1card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        yellow1card.setBackground(new java.awt.Color(255, 255, 255));
        yellow1card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 248, 0)));

        javax.swing.GroupLayout yellow1cardLayout = new javax.swing.GroupLayout(yellow1card);
        yellow1card.setLayout(yellow1cardLayout);
        yellow1cardLayout.setHorizontalGroup(
            yellow1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        yellow1cardLayout.setVerticalGroup(
            yellow1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        yellow1card.setBounds(110, 50, 20, 30);
        ownedPropertyCardPanel.add(yellow1card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        green1card.setBackground(new java.awt.Color(255, 255, 255));
        green1card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));

        javax.swing.GroupLayout green1cardLayout = new javax.swing.GroupLayout(green1card);
        green1card.setLayout(green1cardLayout);
        green1cardLayout.setHorizontalGroup(
            green1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        green1cardLayout.setVerticalGroup(
            green1cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        green1card.setBounds(110, 90, 20, 30);
        ownedPropertyCardPanel.add(green1card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        bluecard2.setBackground(new java.awt.Color(255, 255, 255));
        bluecard2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));

        javax.swing.GroupLayout bluecard2Layout = new javax.swing.GroupLayout(bluecard2);
        bluecard2.setLayout(bluecard2Layout);
        bluecard2Layout.setHorizontalGroup(
            bluecard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        bluecard2Layout.setVerticalGroup(
            bluecard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        bluecard2.setBounds(140, 130, 20, 30);
        ownedPropertyCardPanel.add(bluecard2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rail4card.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/railcard.gif"))); // NOI18N
        rail4card.setBounds(100, 170, 31, 30);
        ownedPropertyCardPanel.add(rail4card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rail1card.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/railcard.gif"))); // NOI18N
        rail1card.setBounds(10, 170, 31, 30);
        ownedPropertyCardPanel.add(rail1card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rail2card.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/railcard.gif"))); // NOI18N
        rail2card.setBounds(40, 170, 31, 30);
        ownedPropertyCardPanel.add(rail2card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rail3card.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/railcard.gif"))); // NOI18N
        rail3card.setBounds(70, 170, 31, 30);
        ownedPropertyCardPanel.add(rail3card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        electriccard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/electriccard.png"))); // NOI18N
        electriccard.setBounds(140, 170, 30, 40);
        ownedPropertyCardPanel.add(electriccard, javax.swing.JLayeredPane.DEFAULT_LAYER);

        browncard2.setBackground(new java.awt.Color(255, 255, 255));
        browncard2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(120, 0, 0)));

        javax.swing.GroupLayout browncard2Layout = new javax.swing.GroupLayout(browncard2);
        browncard2.setLayout(browncard2Layout);
        browncard2Layout.setHorizontalGroup(
            browncard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        browncard2Layout.setVerticalGroup(
            browncard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        browncard2.setBounds(40, 10, 20, 30);
        ownedPropertyCardPanel.add(browncard2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        tealcard2.setBackground(new java.awt.Color(255, 255, 255));
        tealcard2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(140, 215, 227)));

        javax.swing.GroupLayout tealcard2Layout = new javax.swing.GroupLayout(tealcard2);
        tealcard2.setLayout(tealcard2Layout);
        tealcard2Layout.setHorizontalGroup(
            tealcard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        tealcard2Layout.setVerticalGroup(
            tealcard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        tealcard2.setBounds(40, 50, 20, 30);
        ownedPropertyCardPanel.add(tealcard2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        tealcard3.setBackground(new java.awt.Color(255, 255, 255));
        tealcard3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(140, 215, 227)));

        javax.swing.GroupLayout tealcard3Layout = new javax.swing.GroupLayout(tealcard3);
        tealcard3.setLayout(tealcard3Layout);
        tealcard3Layout.setHorizontalGroup(
            tealcard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        tealcard3Layout.setVerticalGroup(
            tealcard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        tealcard3.setBounds(70, 50, 20, 30);
        ownedPropertyCardPanel.add(tealcard3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        pink2card.setBackground(new java.awt.Color(255, 255, 255));
        pink2card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(227, 117, 190)));

        javax.swing.GroupLayout pink2cardLayout = new javax.swing.GroupLayout(pink2card);
        pink2card.setLayout(pink2cardLayout);
        pink2cardLayout.setHorizontalGroup(
            pink2cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        pink2cardLayout.setVerticalGroup(
            pink2cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        pink2card.setBounds(40, 90, 20, 30);
        ownedPropertyCardPanel.add(pink2card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        pink3card.setBackground(new java.awt.Color(255, 255, 255));
        pink3card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(227, 117, 190)));

        javax.swing.GroupLayout pink3cardLayout = new javax.swing.GroupLayout(pink3card);
        pink3card.setLayout(pink3cardLayout);
        pink3cardLayout.setHorizontalGroup(
            pink3cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        pink3cardLayout.setVerticalGroup(
            pink3cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        pink3card.setBounds(70, 90, 20, 30);
        ownedPropertyCardPanel.add(pink3card, javax.swing.JLayeredPane.DEFAULT_LAYER);

        orangecard2.setBackground(new java.awt.Color(255, 255, 255));
        orangecard2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 94, 5)));

        javax.swing.GroupLayout orangecard2Layout = new javax.swing.GroupLayout(orangecard2);
        orangecard2.setLayout(orangecard2Layout);
        orangecard2Layout.setHorizontalGroup(
            orangecard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        orangecard2Layout.setVerticalGroup(
            orangecard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        orangecard2.setBounds(40, 130, 20, 30);
        ownedPropertyCardPanel.add(orangecard2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        orangecard3.setBackground(new java.awt.Color(255, 255, 255));
        orangecard3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 94, 5)));

        javax.swing.GroupLayout orangecard3Layout = new javax.swing.GroupLayout(orangecard3);
        orangecard3.setLayout(orangecard3Layout);
        orangecard3Layout.setHorizontalGroup(
            orangecard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        orangecard3Layout.setVerticalGroup(
            orangecard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        orangecard3.setBounds(70, 130, 20, 30);
        ownedPropertyCardPanel.add(orangecard3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        redcard2.setBackground(new java.awt.Color(255, 255, 255));
        redcard2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(244, 0, 0)));

        javax.swing.GroupLayout redcard2Layout = new javax.swing.GroupLayout(redcard2);
        redcard2.setLayout(redcard2Layout);
        redcard2Layout.setHorizontalGroup(
            redcard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        redcard2Layout.setVerticalGroup(
            redcard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        redcard2.setBounds(140, 10, 20, 30);
        ownedPropertyCardPanel.add(redcard2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        redcard3.setBackground(new java.awt.Color(255, 255, 255));
        redcard3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(244, 0, 0)));

        javax.swing.GroupLayout redcard3Layout = new javax.swing.GroupLayout(redcard3);
        redcard3.setLayout(redcard3Layout);
        redcard3Layout.setHorizontalGroup(
            redcard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        redcard3Layout.setVerticalGroup(
            redcard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        redcard3.setBounds(170, 10, 20, 30);
        ownedPropertyCardPanel.add(redcard3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        yellowcard2.setBackground(new java.awt.Color(255, 255, 255));
        yellowcard2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 248, 0)));

        javax.swing.GroupLayout yellowcard2Layout = new javax.swing.GroupLayout(yellowcard2);
        yellowcard2.setLayout(yellowcard2Layout);
        yellowcard2Layout.setHorizontalGroup(
            yellowcard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        yellowcard2Layout.setVerticalGroup(
            yellowcard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        yellowcard2.setBounds(140, 50, 20, 30);
        ownedPropertyCardPanel.add(yellowcard2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        yellowcard3.setBackground(new java.awt.Color(255, 255, 255));
        yellowcard3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 248, 0)));

        javax.swing.GroupLayout yellowcard3Layout = new javax.swing.GroupLayout(yellowcard3);
        yellowcard3.setLayout(yellowcard3Layout);
        yellowcard3Layout.setHorizontalGroup(
            yellowcard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        yellowcard3Layout.setVerticalGroup(
            yellowcard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        yellowcard3.setBounds(170, 50, 20, 30);
        ownedPropertyCardPanel.add(yellowcard3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        greencard2.setBackground(new java.awt.Color(255, 255, 255));
        greencard2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));

        javax.swing.GroupLayout greencard2Layout = new javax.swing.GroupLayout(greencard2);
        greencard2.setLayout(greencard2Layout);
        greencard2Layout.setHorizontalGroup(
            greencard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        greencard2Layout.setVerticalGroup(
            greencard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        greencard2.setBounds(140, 90, 20, 30);
        ownedPropertyCardPanel.add(greencard2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        greencard3.setBackground(new java.awt.Color(255, 255, 255));
        greencard3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));

        javax.swing.GroupLayout greencard3Layout = new javax.swing.GroupLayout(greencard3);
        greencard3.setLayout(greencard3Layout);
        greencard3Layout.setHorizontalGroup(
            greencard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        greencard3Layout.setVerticalGroup(
            greencard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        greencard3.setBounds(170, 90, 20, 30);
        ownedPropertyCardPanel.add(greencard3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        blue1card1.setBackground(new java.awt.Color(255, 255, 255));
        blue1card1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));

        javax.swing.GroupLayout blue1card1Layout = new javax.swing.GroupLayout(blue1card1);
        blue1card1.setLayout(blue1card1Layout);
        blue1card1Layout.setHorizontalGroup(
            blue1card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        blue1card1Layout.setVerticalGroup(
            blue1card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        blue1card1.setBounds(110, 130, 20, 30);
        ownedPropertyCardPanel.add(blue1card1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout selectedPlayerPropertyPanelLayout = new javax.swing.GroupLayout(selectedPlayerPropertyPanel);
        selectedPlayerPropertyPanel.setLayout(selectedPlayerPropertyPanelLayout);
        selectedPlayerPropertyPanelLayout.setHorizontalGroup(
            selectedPlayerPropertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selectedOwnedPropertyLabelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ownedPropertyCardPanel)
        );
        selectedPlayerPropertyPanelLayout.setVerticalGroup(
            selectedPlayerPropertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedPlayerPropertyPanelLayout.createSequentialGroup()
                .addComponent(selectedOwnedPropertyLabelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ownedPropertyCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout selectedPlayerPanelLayout = new javax.swing.GroupLayout(selectedPlayerPanel);
        selectedPlayerPanel.setLayout(selectedPlayerPanelLayout);
        selectedPlayerPanelLayout.setHorizontalGroup(
            selectedPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selectedPlayerInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(selectedPlayerPropertyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        selectedPlayerPanelLayout.setVerticalGroup(
            selectedPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedPlayerPanelLayout.createSequentialGroup()
                .addComponent(selectedPlayerInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectedPlayerPropertyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PlayerPanelMainLayout = new javax.swing.GroupLayout(PlayerPanelMain);
        PlayerPanelMain.setLayout(PlayerPanelMainLayout);
        PlayerPanelMainLayout.setHorizontalGroup(
            PlayerPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayerPanelMainLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(selectedPlayerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        PlayerPanelMainLayout.setVerticalGroup(
            PlayerPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayerPanelMainLayout.createSequentialGroup()
                .addComponent(selectedPlayerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        selectedBoardPiecePanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        selectedBoardPieceIconPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        selectedBoardPieceIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Go.png"))); // NOI18N

        javax.swing.GroupLayout selectedBoardPieceIconPanelLayout = new javax.swing.GroupLayout(selectedBoardPieceIconPanel);
        selectedBoardPieceIconPanel.setLayout(selectedBoardPieceIconPanelLayout);
        selectedBoardPieceIconPanelLayout.setHorizontalGroup(
            selectedBoardPieceIconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedBoardPieceIconPanelLayout.createSequentialGroup()
                .addComponent(selectedBoardPieceIcon)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        selectedBoardPieceIconPanelLayout.setVerticalGroup(
            selectedBoardPieceIconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedBoardPieceIconPanelLayout.createSequentialGroup()
                .addComponent(selectedBoardPieceIcon)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout selectedBoardPiecePanelLayout = new javax.swing.GroupLayout(selectedBoardPiecePanel);
        selectedBoardPiecePanel.setLayout(selectedBoardPiecePanelLayout);
        selectedBoardPiecePanelLayout.setHorizontalGroup(
            selectedBoardPiecePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedBoardPiecePanelLayout.createSequentialGroup()
                .addComponent(selectedBoardPieceIconPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        selectedBoardPiecePanelLayout.setVerticalGroup(
            selectedBoardPiecePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selectedBoardPieceIconPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        monoboardBaseLayer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        brown1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/brown1.png"))); // NOI18N
        brown1.setToolTipText("");
        brown1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        brown1.setBounds(570, 630, 60, 92);
        monoboardBaseLayer.add(brown1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        corner_jail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/jail.png"))); // NOI18N
        corner_jail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        corner_jail.setBounds(0, 630, 90, 92);
        monoboardBaseLayer.add(corner_jail, javax.swing.JLayeredPane.DEFAULT_LAYER);

        teal3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/teal1.png"))); // NOI18N
        teal3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        teal3.setBounds(270, 630, 60, 92);
        monoboardBaseLayer.add(teal3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        teal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/teal2.png"))); // NOI18N
        teal2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        teal2.setBounds(150, 630, 60, 92);
        monoboardBaseLayer.add(teal2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        chance1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/chance1.png"))); // NOI18N
        chance1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        chance1.setBounds(210, 630, 60, 92);
        monoboardBaseLayer.add(chance1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        teal1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/teal3.png"))); // NOI18N
        teal1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        teal1.setBounds(90, 630, 60, 92);
        monoboardBaseLayer.add(teal1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rail1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/rail1.png"))); // NOI18N
        rail1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        rail1.setBounds(330, 630, 60, 92);
        monoboardBaseLayer.add(rail1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        incomeTax.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/incometax.png"))); // NOI18N
        incomeTax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        incomeTax.setBounds(390, 630, 60, 92);
        monoboardBaseLayer.add(incomeTax, javax.swing.JLayeredPane.DEFAULT_LAYER);

        brown2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/brown2.png"))); // NOI18N
        brown2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        brown2.setBounds(450, 630, 60, 92);
        monoboardBaseLayer.add(brown2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        brown2.getAccessibleContext().setAccessibleDescription("");

        chest1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/communityChest1.png"))); // NOI18N
        chest1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        chest1.setBounds(510, 630, 60, 92);
        monoboardBaseLayer.add(chest1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        corner_go.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Go.png"))); // NOI18N
        corner_go.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        corner_go.setName("go_corner"); // NOI18N
        corner_go.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        corner_go.setBounds(630, 630, 94, 94);
        monoboardBaseLayer.add(corner_go, javax.swing.JLayeredPane.DEFAULT_LAYER);
        corner_go.getAccessibleContext().setAccessibleName("corner_go");

        pink1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pink1.png"))); // NOI18N
        pink1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        pink1.setBounds(0, 570, 92, 60);
        monoboardBaseLayer.add(pink1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        pink2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pink2.png"))); // NOI18N
        pink2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        pink2.setBounds(0, 450, 92, 60);
        monoboardBaseLayer.add(pink2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        electric.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/electric.png"))); // NOI18N
        electric.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        electric.setBounds(0, 510, 92, 60);
        monoboardBaseLayer.add(electric, javax.swing.JLayeredPane.DEFAULT_LAYER);

        pink3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pink3.png"))); // NOI18N
        pink3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        pink3.setBounds(0, 390, 92, 60);
        monoboardBaseLayer.add(pink3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rail2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/rail2.png"))); // NOI18N
        rail2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        rail2.setBounds(0, 330, 92, 60);
        monoboardBaseLayer.add(rail2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        orange1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/orange1.png"))); // NOI18N
        orange1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        orange1.setBounds(0, 270, 92, 60);
        monoboardBaseLayer.add(orange1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        chest2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/communityChest2.png"))); // NOI18N
        chest2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        chest2.setBounds(0, 210, 92, 60);
        monoboardBaseLayer.add(chest2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        orange2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/orange2.png"))); // NOI18N
        orange2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        orange2.setBounds(0, 150, 92, 60);
        monoboardBaseLayer.add(orange2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        orange3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/orange3.png"))); // NOI18N
        orange3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        orange3.setBounds(0, 90, 92, 60);
        monoboardBaseLayer.add(orange3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        red1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/red1.png"))); // NOI18N
        red1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        red1.setBounds(210, 0, 60, 92);
        monoboardBaseLayer.add(red1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        chance2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/chance2.png"))); // NOI18N
        chance2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        chance2.setBounds(150, 0, 60, 92);
        monoboardBaseLayer.add(chance2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        red2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/red2.png"))); // NOI18N
        red2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        red2.setBounds(90, 0, 60, 92);
        monoboardBaseLayer.add(red2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        red3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/red3.png"))); // NOI18N
        red3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        red3.setBounds(270, 0, 60, 92);
        monoboardBaseLayer.add(red3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rail3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/rail3.png"))); // NOI18N
        rail3.setBounds(330, 0, 60, 92);
        monoboardBaseLayer.add(rail3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        yellow1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/yellow1.png"))); // NOI18N
        yellow1.setBounds(390, 0, 60, 92);
        monoboardBaseLayer.add(yellow1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        yellow2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/yellow2.png"))); // NOI18N
        yellow2.setBounds(450, 0, 60, 92);
        monoboardBaseLayer.add(yellow2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        water.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/water.png"))); // NOI18N
        water.setBounds(510, 0, 60, 92);
        monoboardBaseLayer.add(water, javax.swing.JLayeredPane.DEFAULT_LAYER);

        yellow3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/yellow3.png"))); // NOI18N
        yellow3.setBounds(570, 0, 60, 92);
        monoboardBaseLayer.add(yellow3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/gojail.png"))); // NOI18N
        jail.setBounds(630, 0, 92, 92);
        monoboardBaseLayer.add(jail, javax.swing.JLayeredPane.DEFAULT_LAYER);

        green1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/green1.png"))); // NOI18N
        green1.setBounds(630, 270, 92, 60);
        monoboardBaseLayer.add(green1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        green2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/green2.png"))); // NOI18N
        green2.setBounds(630, 150, 92, 60);
        monoboardBaseLayer.add(green2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        chest3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/communityChest3.png"))); // NOI18N
        chest3.setBounds(630, 210, 92, 60);
        monoboardBaseLayer.add(chest3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        rail4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/rail4.png"))); // NOI18N
        rail4.setBounds(630, 330, 92, 60);
        monoboardBaseLayer.add(rail4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        chance3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/chance3.png"))); // NOI18N
        chance3.setBounds(630, 390, 92, 60);
        monoboardBaseLayer.add(chance3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        blue1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blue1.png"))); // NOI18N
        blue1.setBounds(630, 450, 92, 60);
        monoboardBaseLayer.add(blue1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        luxaryTax.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/luxaryTax.png"))); // NOI18N
        luxaryTax.setBounds(630, 510, 92, 60);
        monoboardBaseLayer.add(luxaryTax, javax.swing.JLayeredPane.DEFAULT_LAYER);

        green3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/green3.png"))); // NOI18N
        green3.setBounds(630, 90, 92, 60);
        monoboardBaseLayer.add(green3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        blue2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blue2.png"))); // NOI18N
        blue2.setBounds(630, 570, 92, 60);
        monoboardBaseLayer.add(blue2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        freeparking.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/freeparking.png"))); // NOI18N
        freeparking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickedBoardPiece(evt);
            }
        });
        freeparking.setBounds(0, 0, 92, 92);
        monoboardBaseLayer.add(freeparking, javax.swing.JLayeredPane.DEFAULT_LAYER);

        dog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dog.png"))); // NOI18N
        dog.setBounds(640, 660, 29, 30);
        monoboardBaseLayer.add(dog, javax.swing.JLayeredPane.PALETTE_LAYER);

        brown1Lot.setBackground(new java.awt.Color(102, 0, 0));
        brown1Lot.setMinimumSize(new java.awt.Dimension(56, 19));
        brown1Lot.setPreferredSize(new java.awt.Dimension(56, 19));
        brown1Lot.setBounds(571, 630, 56, 19);
        monoboardBaseLayer.add(brown1Lot, javax.swing.JLayeredPane.PALETTE_LAYER);

        brown2Lot.setBackground(new java.awt.Color(102, 0, 0));
        brown2Lot.setMinimumSize(new java.awt.Dimension(56, 19));
        brown2Lot.setPreferredSize(new java.awt.Dimension(56, 19));
        brown2Lot.setBounds(450, 630, 56, 19);
        monoboardBaseLayer.add(brown2Lot, javax.swing.JLayeredPane.PALETTE_LAYER);

        diceRollPanelBase.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        diceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dice.gif"))); // NOI18N
        diceButton.setRequestFocusEnabled(false);
        diceButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diceButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout diceRollPanelBaseLayout = new javax.swing.GroupLayout(diceRollPanelBase);
        diceRollPanelBase.setLayout(diceRollPanelBaseLayout);
        diceRollPanelBaseLayout.setHorizontalGroup(
            diceRollPanelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diceRollPanelBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(diceButton)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        diceRollPanelBaseLayout.setVerticalGroup(
            diceRollPanelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diceRollPanelBaseLayout.createSequentialGroup()
                .addComponent(diceButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(monoboardBaseLayer, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectedBoardPiecePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PlayerPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(diceRollPanelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectedBoardPiecePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PlayerPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(diceRollPanelBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(monoboardBaseLayer, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Update the icon of a target label with a new icon **/
    private void updateLabelIcon(JLabel targetLabel, String newIcon) {
        // Remove the prev Icon first
        targetLabel.setIcon(null);
        // Set the new icon
        targetLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/"+newIcon)));
        targetLabel.revalidate();
    }
    
    /**
     * Add a building to a specified lot
     * @param : JLabel lot to which a building is drawn
     * @param :  = add a new green building
     */
    private void addBuildingToLot(JPanel propertyLot, String buildingType) {
        JLabel newLabel = new JLabel();
        newLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(buildingType)));
        propertyLot.add(newLabel);
        
        propertyLot.revalidate();
    }
    
    /**
     * Removes a single building unit from the lot
     * @param propertyLot 
     */
    private void removeBuildingFromLot(JPanel propertyLot) {
        int numComponents = propertyLot.getComponentCount();
        propertyLot.remove(numComponents-1);
        
        propertyLot.revalidate();
    }
    
    private void clickedBoardPiece(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickedBoardPiece
        // TODO add your handling code here:
        JLabel lb = (JLabel)evt.getSource();
        String[] trimmedPath = new String[2];
        trimmedPath = lb.getIcon().toString().split("/Images/");
        
        updateLabelIcon(selectedBoardPieceIcon, trimmedPath[1]);
        System.out.println(lb.getX() + ":" + lb.getY());
        
        addBuildingToLot(brown2Lot, GREEN_BUILDING);
    }//GEN-LAST:event_clickedBoardPiece

    private void diceButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diceButtonMouseClicked
        
    }//GEN-LAST:event_diceButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonopolyBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonopolyBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonopolyBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonopolyBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonopolyBoard1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PlayerPanelMain;
    private javax.swing.JLabel blue1;
    private javax.swing.JPanel blue1card1;
    private javax.swing.JLabel blue2;
    private javax.swing.JPanel bluecard2;
    private javax.swing.JLabel brown1;
    private javax.swing.JPanel brown1Lot;
    private javax.swing.JPanel brown1card;
    private javax.swing.JLabel brown2;
    private javax.swing.JPanel brown2Lot;
    private javax.swing.JPanel browncard2;
    private javax.swing.JLabel chance1;
    private javax.swing.JLabel chance2;
    private javax.swing.JLabel chance3;
    private javax.swing.JLabel chest1;
    private javax.swing.JLabel chest2;
    private javax.swing.JLabel chest3;
    private javax.swing.JLabel corner_go;
    private javax.swing.JLabel corner_jail;
    private javax.swing.JButton diceButton;
    private javax.swing.JPanel diceRollPanelBase;
    private javax.swing.JLabel dog;
    private javax.swing.JLabel electric;
    private javax.swing.JLabel electriccard;
    private javax.swing.JLabel freeparking;
    private javax.swing.JLabel green1;
    private javax.swing.JPanel green1card;
    private javax.swing.JLabel green2;
    private javax.swing.JLabel green3;
    private javax.swing.JPanel greencard2;
    private javax.swing.JPanel greencard3;
    private javax.swing.JLabel incomeTax;
    private javax.swing.JLabel jail;
    private javax.swing.JLabel luxaryTax;
    private javax.swing.JLayeredPane monoboardBaseLayer;
    private javax.swing.JLabel orange1;
    private javax.swing.JPanel orange1card;
    private javax.swing.JLabel orange2;
    private javax.swing.JLabel orange3;
    private javax.swing.JPanel orangecard2;
    private javax.swing.JPanel orangecard3;
    private javax.swing.JLayeredPane ownedPropertyCardPanel;
    private javax.swing.JLabel ownerPropertyLabel;
    private javax.swing.JLabel pink1;
    private javax.swing.JPanel pink1card;
    private javax.swing.JLabel pink2;
    private javax.swing.JPanel pink2card;
    private javax.swing.JLabel pink3;
    private javax.swing.JPanel pink3card;
    private javax.swing.JLabel rail1;
    private javax.swing.JLabel rail1card;
    private javax.swing.JLabel rail2;
    private javax.swing.JLabel rail2card;
    private javax.swing.JLabel rail3;
    private javax.swing.JLabel rail3card;
    private javax.swing.JLabel rail4;
    private javax.swing.JLabel rail4card;
    private javax.swing.JLabel red1;
    private javax.swing.JPanel red1card;
    private javax.swing.JLabel red2;
    private javax.swing.JLabel red3;
    private javax.swing.JPanel redcard2;
    private javax.swing.JPanel redcard3;
    private javax.swing.JLabel selectedBoardPieceIcon;
    private javax.swing.JPanel selectedBoardPieceIconPanel;
    private javax.swing.JPanel selectedBoardPiecePanel;
    private javax.swing.JPanel selectedOwnedPropertyLabelPanel;
    private javax.swing.JLabel selectedPlayerCash;
    private javax.swing.JLabel selectedPlayerIcon;
    private javax.swing.JPanel selectedPlayerInfo;
    private javax.swing.JLabel selectedPlayerName;
    private javax.swing.JPanel selectedPlayerPanel;
    private javax.swing.JPanel selectedPlayerPropertyPanel;
    private javax.swing.JLabel teal1;
    private javax.swing.JPanel teal1card;
    private javax.swing.JLabel teal2;
    private javax.swing.JLabel teal3;
    private javax.swing.JPanel tealcard2;
    private javax.swing.JPanel tealcard3;
    private javax.swing.JLabel water;
    private javax.swing.JLabel yellow1;
    private javax.swing.JPanel yellow1card;
    private javax.swing.JLabel yellow2;
    private javax.swing.JLabel yellow3;
    private javax.swing.JPanel yellowcard2;
    private javax.swing.JPanel yellowcard3;
    // End of variables declaration//GEN-END:variables
}
